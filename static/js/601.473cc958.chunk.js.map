{"version":3,"file":"static/js/601.473cc958.chunk.js","mappings":"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","sources":["pages/LoginPage/AuthPage.styled.jsx","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","schemas/authValidationSchemas.js"],"sourcesContent":["import styled from 'styled-components';\nimport { up } from 'styled-breakpoints';\nimport {\n  authBackgroundDesktop,\n  authBackgroundTablet,\n  authBackgroundMobile,\n} from '../../images';\n\nexport const BackgroundWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100vw;\n  height: 100vh;\n  background-color: ${prop => prop.theme.colors.background};\n  background-origin: border-box;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: bottom;\n  background-image: url('${authBackgroundMobile}');\n  ${up('mobileSizeM')} {\n    background-image: url('${authBackgroundTablet}');\n  }\n  ${up('pc')} {\n    background-image: url('${authBackgroundDesktop}');\n  }\n`;\n","import styled from 'styled-components';\nimport { up } from 'styled-breakpoints';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikErrorMessage,\n} from 'formik';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport const FormWrapper = styled.div`\n  padding-top: 42px;\n  ${up('tablet')} {\n    padding-top: 60px;\n    background-color: ${prop => prop.theme.colors.mainWhite};\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 40px;\n    width: 608px;\n    height: 449px;\n  }\n  ${up('pc')} {\n    width: 618px;\n    height: 473px;\n  }\n`;\n\nexport const Heading = styled.h2`\n  margin-bottom: 40px;\n  text-align: center;\n  font-family: ${prop => prop.theme.fonts[1]};\n  letter-spacing: 0.04em;\n  font-weight: ${prop => prop.theme.fontWeights[2]};\n  font-size: ${prop => prop.theme.fontSizes[5]}px;\n  line-height: 33px;\n  color: ${prop => prop.theme.colors.mainBlack};\n  ${up('tablet')} {\n    font-weight: ${prop => prop.theme.fontWeights[1]};\n    font-size: ${prop => prop.theme.fontSizes[7]}px;\n    line-height: 49px;\n  }\n`;\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  margin-bottom: 16px;\n  &:last-of-type {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const Input = styled(FormikField)`\n  font-family: ${prop => prop.theme.fonts[1]};\n  width: 280px;\n  height: 40px;\n  padding: 11px 14px 12px;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  background-color: ${prop => prop.theme.colors.background};\n  font-weight: ${prop => prop.theme.fontWeights[0]};\n  font-size: ${prop => prop.theme.fontSizes[1]}px;\n  line-height: 19px;\n  letter-spacing: 0.04em;\n  color: ${prop => prop.theme.colors.mainBlack};\n  ::placeholder {\n    font-weight: ${prop => prop.theme.fontWeights[0]};\n    font-size: ${prop => prop.theme.fontSizes[1]}px;\n    line-height: 19px;\n    letter-spacing: 0.04em;\n    color: ${prop => prop.theme.colors.greyText};\n  }\n  &:focus {\n    outline: none;\n    border: 1px solid ${prop => prop.theme.colors.activeAccent};\n    background-color: ${prop => prop.theme.colors.mainWhite};\n  }\n  ${up('tablet')} {\n    width: 448px;\n    height: 52px;\n    padding: 14px 32px 13px;\n    font-size: ${prop => prop.theme.fontSizes[3]}px;\n    line-height: 25px;\n    ::placeholder {\n      font-size: ${prop => prop.theme.fontSizes[3]}px;\n      line-height: 25px;\n    }\n    ${up('pc')} {\n      width: 458px;\n    }\n  }\n`;\n\nexport const Error = styled(FormikErrorMessage)`\n  position: absolute;\n  bottom: -16px;\n  left: 0;\n  font-family: ${prop => prop.theme.fonts[1]};\n  padding: ${prop => prop.theme.space[1]}px ${prop => prop.theme.space[3]}px;\n  font-size: 10px;\n  color: ${prop => prop.theme.colors.activeAccent};\n`;\n\nexport const Button = styled.button`\n  width: 280px;\n  height: 44px;\n  margin-bottom: 40px;\n  padding: 10px 28px;\n  cursor: pointer;\n  border-radius: 40px;\n  border: none;\n  background-color: ${prop => prop.theme.colors.mainAccent};\n  font-family: ${prop => prop.theme.fonts[1]};\n  font-weight: ${prop => prop.theme.fontWeights[1]};\n  font-size: ${prop => prop.theme.fontSizes[4]}px;\n  line-height: 27px;\n  letter-spacing: 0.04em;\n  color: ${prop => prop.theme.colors.mainWhite};\n  &:hover,\n  &:focus {\n    box-sizing: border-box;\n    padding: 8px 26px;\n    background-color: ${prop => prop.theme.colors.mainWhite};\n    border: 2px solid ${prop => prop.theme.colors.mainAccent};\n    color: ${prop => prop.theme.colors.additionalBlack};\n  }\n  ${up('tablet')} {\n    outline: none;\n    width: 458px;\n  }\n  ${up('pc')} {\n    height: 48px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 40px;\n  font-family: ${prop => prop.theme.fonts[1]};\n  font-weight: ${prop => prop.theme.fontWeights[0]};\n  font-size: ${prop => prop.theme.fontSizes[0]}px;\n  color: ${prop => prop.theme.colors.grayText};\n  line-height: 16px;\n  letter-spacing: 0.04em;\n`;\n\nexport const Link = styled(RouterLink)`\n  text-decoration: none;\n  color: ${prop => prop.theme.colors.blue};\n  &:hover,\n  &:focus {\n    color: ${prop => prop.theme.colors.activeAccent};\n  }\n`;\n","import { Formik } from 'formik';\n\nimport { useDispatch } from 'react-redux';\n\nimport { loginSchema } from '../../schemas/authValidationSchemas';\nimport { login } from 'redux/auth/authOperations';\nimport {\n  FormWrapper,\n  Heading,\n  Form,\n  Input,\n  Label,\n  Button,\n  Text,\n  Error,\n  Link,\n} from './LoginForm.styled';\n\nexport const LoginForm = () => {\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    const user = {\n      email: values.email,\n      password: values.password,\n    };\n    console.log(user);\n    try {\n      const data = await dispatch(login(user));\n      console.log(data)\n      if (data.type === 'auth/login/fulfilled') {\n        resetForm();\n      }\n    } catch (error) {\n      console.log('Something wrong, please try again later');\n    }\n  };\n  return (\n    <FormWrapper>\n      <Heading>Login</Heading>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={loginSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <Label>\n            <Input\n              autoComplete=\"on\"\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n            ></Input>\n            <Error name=\"email\" component=\"p\"></Error>\n          </Label>\n          <Label>\n            <Input\n              autoComplete=\"off\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n            ></Input>\n            <Error name=\"password\" component=\"p\"></Error>\n          </Label>\n          <Button type=\"submit\">Login</Button>\n          <Text>\n            Don't have an account? <Link to=\"/register\">Register</Link>\n          </Text>\n        </Form>\n      </Formik>\n    </FormWrapper>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { BackgroundWrapper } from './AuthPage.styled';\n\nconst LoginPage = () => {\n  return (\n    <>\n      <BackgroundWrapper> <LoginForm /></BackgroundWrapper>\n     \n    </>\n  );\n};\n\nexport default LoginPage;\n","import * as yup from 'yup';\n\n\nconst emailRegexp = /^([a-zA-Z0-9_.]+){1}([a-zA-Z0-9_\\-.]+){1}@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,3})$/ ;\nconst passwordRegexp = /^\\S*$/;\nconst nameRegexp = /^([a-zA-Zа-яА-ЯёЁ\\s]+)$/;\nconst phoneRegexp = /^\\+380\\d{3}\\d{2}\\d{2}\\d{2}$/;\nconst locationRegexp =\n  /^(?:(?:\\w+-\\w+)+|(?:\\w+)+),\\s(?:(?:\\w+-\\w+)+|(?:\\w+)+)$/;\n\nexport const registerSchema = yup.object().shape({\n  email: yup\n    .string()\n    .matches(emailRegexp, 'Email must be in format mail@mail.com')\n    .min(10, 'Email should be 10 characters minimum.')\n    .max(63, 'Email should be 63 characters maximum.')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(7, 'Password should be 7 characters minimum.')\n    .max(32, 'Password should be 32 characters maximum.')\n    .matches(passwordRegexp, 'Whitespace is not allowed'),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Password must match')\n    .required('Confirm password is required'),\n  name: yup.string().matches(nameRegexp, 'Name must contain only letters'),\n  location: yup\n    .string()\n    .matches(locationRegexp, 'Location must be in format City, Region'),\n  phone: yup\n    .string()\n    .max(13, 'Pnone number must contain 12 numbers')\n    .matches(phoneRegexp, 'Mobile phone must be in format +380xxxxxxxxx'),\n});\n\nexport const loginSchema = yup.object().shape({\n  email: yup\n    .string()\n    .min(10, 'Email should be 10 characters minimum.')\n    .max(63, 'Email should be 63 characters maximum.')\n    .matches(emailRegexp, 'Email must be in format mail@mail.com')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(7, 'Password should be 7 characters minimum.')\n    .max(32, 'Password should be 32 characters maximum.')\n    .matches(passwordRegexp, 'Whitespace is not allowed'),\n});\n"],"names":["BackgroundWrapper","styled","prop","theme","colors","background","authBackgroundMobile","up","authBackgroundTablet","authBackgroundDesktop","FormWrapper","mainWhite","Heading","fonts","fontWeights","fontSizes","mainBlack","Form","FormikForm","Label","Input","FormikField","greyText","activeAccent","Error","FormikErrorMessage","space","Button","mainAccent","additionalBlack","Text","grayText","Link","RouterLink","blue","LoginForm","dispatch","useDispatch","handleSubmit","values","resetForm","user","email","password","console","log","login","data","type","initialValues","validationSchema","loginSchema","onSubmit","autoComplete","name","placeholder","component","to","emailRegexp","passwordRegexp","registerSchema","yup","shape","matches","min","max","required","confirmPassword","oneOf","location","phone"],"sourceRoot":""}