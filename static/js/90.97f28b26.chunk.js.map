{"version":3,"file":"static/js/90.97f28b26.chunk.js","mappings":"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","sources":["components/Spinner/Spinner.styled.jsx","components/Friend/Friend.styled.jsx","components/Friend/Friend.jsx","redux/friends/friendsSelectors.js","components/FriendList/FriendList.styled.jsx","components/FriendList/FriendList.jsx","pages/OurFriendsPage/OurFriendsPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Spinner = styled.div`\n  margin-top: 60px;\n  margin-bottom: 100px;\n  border: 16px solid peachpuff;\n  border-top: 16px orange solid;\n  border-radius: 50%;\n  height: 120px;\n  width: 120px;\n  animation: spin 2s linear infinite;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;","import styled from 'styled-components';\nimport { theme } from '../../theme';\nconst { space, fonts, fontSizes, fontWeights, colors } = theme;\n\nexport const Card = styled.li`\nposition: relative;\nfont-family: ${fonts[1]};\n  display: flex;\n  background-color: ${colors.mainWhite};\n  box-shadow: 7px 4px 14px rgba(49, 21, 4, 0.07);\n  border-radius: 40px;\n  padding: ${space[3]}px 0;\n  flex-direction: column;\n\n  @media (max-width: 320px) {\n    border-radius: 20px;\n  }\n`;\n\nexport const CardTitle = styled.a`\n  font-weight: ${fontWeights[2]};\n  text-decoration-line: underline;\n  color: ${colors.mainAccent};\n  text-align: center;\n  max-width: 130px;\n  margin-right: auto;\n  margin-left: auto;\n\n  margin-bottom: ${fontSizes[1]}px;\n  font-size: ${fontSizes[0]}px;\n  line-height: 16px;\n\n\n  @media (min-width: 320px) {\n    margin-bottom: ${space[3]}px;\n    font-size: ${fontSizes[2]}px;\n    line-height: 22px;\n    max-width: 250px;\n  }\n\n  @media (min-width: 1280px) {\n    margin-bottom: ${space[3]}px;\n    font-size: ${fontSizes[4]}px;\n    line-height: 27px;\n  }\n`;\n\nexport const CardInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  @media (min-width: 1280px) {\n    justify-content: space-evenly;\n  }\n`;\n\nexport const CardPhoto = styled.div`\n  @media (max-width: 319px) {\n    width: 82px;\n    height: 75px;\n  }\n\n  @media (min-width: 320px) {\n    width: 120px;\n    height: 85px;\n  }\n\n  @media (min-width: 1280px) {\n    width: 158px;\n    height: 112px;\n  }\n`;\n\nexport const CardData = styled.div`\n  margin-right: 5%;\n  font-weight: 500;\n  max-width: 200px;\n  color: #000000;\n  ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  @media (max-width: 319px) {\n    font-size: 12px;\n    line-height: 16px;\n    max-width: 140px;\n  }\n\n  @media (min-width: 320px) {\n    font-size: 14px;\n    line-height: 19px;\n    justify-content:space-between;\n\n  }\n\n  @media (min-width: 1280px) {\n    font-size: 16px;\n    line-height: 22px;\n    margin-left: 16px;\n  }\n`;\n\nexport const CardDataItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 319px) {\n    margin-bottom: 4px;\n  }\n  @media (min-width: 320px) {\n    margin-bottom: 8px;\n  }\n  @media (min-width: 1280px) {\n    margin-bottom: 12px;\n  }\n  li:last-child {\n    margin-bottom: 0px;\n  }\n\n  a {\n    text-decoration: underline;\n    color: #000000;\n  }\n`;\n\nexport const CardText = styled.span`\n  font-weight: 500;\n  color: #000000;\n  ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n  @media (max-width: 319px) {\n    font-size: 12px;\n    line-height: 16px;\n  }\n\n  @media (min-width: 320px) {\n    font-size: 14px;\n    line-height: 19px;\n  }\n\n  @media (min-width: 1280px) {\n    max-width: 198px;\n  }\n`;\n\nexport const CardWorkDays = styled.div`\n  position: absolute;\n  top: 35%;\n  left: 50%;\n  padding: 12px;\n  background: #FFFFFF;\n  border: 1px solid #F59256;\n  box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.25);\n  border-radius: 8px;\n  z-index: 1;\n\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  li {\n    font-family: ${fonts[1]};\n    display: flex;\n    margin-bottom:4px;\n    justify-content: space-evenly;\n    align-items: center;\n    font-size: 12px;\n    line-height: 1.33;\n  }\n\n  li:last-child {\n    margin-bottom:0px;\n  }\n\n  li+span {\n    margin-left: 12px;\n  }\n\n  span:first-child {\n    margin-right:12px;\n  }\n`;\n\n\nexport const CardTime = styled.span `\ncursor: pointer;\n`\n","import { useState } from 'react';\nimport {\n  Card,\n  CardTitle,\n  CardInfo,\n  CardPhoto,\n  CardData,\n  CardDataItem,\n  CardWorkDays,\n  CardTime,\n} from './Friend.styled';\n\nimport notfound from './notfound.jpg';\n\nexport const Friend = ({ _id, title, url, imageUrl, addressUrl, address, email, phone, workDays }) => {\n  const [isTimeHovered, setIsTimeHovered] = useState(false);\n  const daysOfWeek = [\"MO\", \"TU\", \"WE\", \"TH\", \"FR\", \"SA\",\"SU\"];\n  const today = new Date().getDay();\n  const hours = workDays?.[today]?.isOpen ? `${workDays[today].from} - ${workDays[today].to}` : null;\n\n  const handleTimeHover = () => {\n    setIsTimeHovered(true);\n  };\n\n  const handleTimeLeave = () => {\n    setIsTimeHovered(false);\n  };\n\n  return (\n    <Card key={_id}>\n      <CardTitle href={url} target=\"_blank\" rel=\"noreferrer\">\n        {title}\n      </CardTitle>\n      <CardInfo>\n        <CardPhoto>\n          <img src={imageUrl || notfound} alt=\"partner logo\" />\n        </CardPhoto>\n        <CardData>\n          <ul>\n          <CardDataItem>\n          <CardTime onMouseEnter={handleTimeHover} onMouseLeave={handleTimeLeave}>Time:</CardTime>\n          {hours ? (\n        <CardTime onMouseEnter={handleTimeHover} onMouseLeave={handleTimeLeave}>{hours}</CardTime>\n      ) : (\n        <span>-----------------------------</span>\n      )}\n          {Object.keys(workDays ?? {}).length > 0 && (\n   <div>\n   {isTimeHovered && (\n     <CardWorkDays>\n       <ul>\n         {Object.entries(workDays ?? {}).map(([dayIndex, { isOpen, from, to }]) => {\n           const day = daysOfWeek[dayIndex];\n           if (!isOpen) return null;\n           return (\n             <li key={day}>\n               <span>{day} </span>\n               <span>{`${from} - ${to}`}</span>\n             </li>\n           );\n         })}\n       </ul>\n     </CardWorkDays>\n   )}\n </div>\n)}\n</CardDataItem>\n            <CardDataItem>\n              <span>Address:</span>\n              {address ? (\n                <span>\n                  <a href={addressUrl ?? '#'} target=\"_blank\" rel=\"noreferrer\">\n                    {address}\n                  </a>\n                </span>\n              ) : (\n                <span>-----------------------------</span>\n              )}\n            </CardDataItem>\n            <CardDataItem>\n              <span>Email:</span>\n              {email ? (\n                <span>\n                  <a href={`mailto:${email}`}>{email}</a>\n                </span>\n              ) : (\n                <span>-----------------------------</span>\n              )}\n            </CardDataItem>\n            <CardDataItem>\n              <span>Phone:</span>\n              {phone ? (\n                <span>\n                  <a href={`tel:${phone}`}>{phone}</a>\n                </span>\n              ) : (\n                <span>-----------------------------</span>\n              )}\n            </CardDataItem>\n          </ul>\n        </CardData>\n      </CardInfo>\n    </Card>\n  );\n};\n","export const selectFriends = state => state.friends.friends;\n","import styled from 'styled-components';\nimport { theme } from '../../theme';\nconst { space, fonts,fontSizes, fontWeights, colors,} = theme;\n\nexport const PartnerTitle = styled.h1`\nfont-family: ${fonts[1]};\nfont-weight: ${fontWeights[2]};\ntext-align: center;\ncolor: ${colors.additionalBlack};\n\nfont-size: ${fontSizes[5]}px;\nline-height: ${space[4]}px;\nmargin-bottom: 28px;\n\n@media (min-width: 768px) {\n  margin-bottom: 40px;\n  font-size: ${fontSizes[9]}px;\n  line-height: ${space[5]}px;\n}\n\n\n@media (min-width: 1280px) {\n  margin-bottom: 60px;\n  font-size: ${fontSizes[9]}px;\n  line-height: ${space[5]}px;\n}\n`;\n\nexport const CardList = styled.ul`\n  display: grid;\n  margin: 0 auto;\n  padding-left: 0;\n\n  grid-template-columns: repeat(1, 1fr);\n  max-width: 280px;\n  gap: ${fontSizes[0]}px;\n\n  @media screen and (min-width: 650px) {\n    grid-template-columns: repeat(2, 1fr);\n    gap: ${space[4]}px;\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    grid-template-columns: repeat(3, 1fr);\n    gap: ${space[4]}px;\n    max-width: 1280px;\n  }\n`;\n\nexport const FriendsContainer = styled.div`\npadding: 40px 0 100px;\n\n@media screen and (min-width: 768px) {\n  padding: 90px 0 100px;\n  }\n@media screen and (min-width: 1280px) {\n    padding: 60px 0 100px;\n  }\n`\n\nexport const SpinnerContainer = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\n`","import { Friend } from \"components/Friend/Friend\";\nimport React, { useEffect, useState } from 'react';\nimport sadDog from './sadDog.jpg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchFriends } from \"redux/friends/friendsOperations\";\nimport { selectFriends } from \"redux/friends/friendsSelectors\";\nimport { Spinner } from 'components/Spinner/Spinner.styled';\nimport {\n  PartnerTitle,\n  CardList,\n  FriendsContainer,\n  SpinnerContainer,\n} from './FriendList.styled';\nimport { Container } from \"components/Container/Container.styled\";\n\nexport const FriendList = () => {\n  const dispatch = useDispatch();\n  const friends = useSelector(selectFriends);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    dispatch(fetchFriends()).then(() => setIsLoading(false));\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <FriendsContainer>\n        <PartnerTitle>Our friends</PartnerTitle>\n        {isLoading ? (\n          <SpinnerContainer>\n          <Spinner />\n          </SpinnerContainer>\n        ) : friends && friends.length > 0 ? (\n          <CardList>\n            {friends.map(({ _id, title, imageUrl, addressUrl, address, email, phone, url , workDays}) => (\n              <Friend\n                key={_id}\n                title={title}\n                imageUrl={imageUrl}\n                address={address}\n                addressUrl={addressUrl}\n                email={email}\n                phone={phone}\n                url={url}\n                workDays = {workDays}\n              />\n            ))}\n          </CardList>\n        ) : (\n            <div>\n            <PartnerTitle>Sorry, we don't have any information at the moment. Please try again later. In the meantime, here's a cute photo.</PartnerTitle>\n            <img src={sadDog} alt=\"A sad dog\" />\n            </div>\n        )}\n      </FriendsContainer>\n    </Container>\n  );\n};\n","import { FriendList } from \"components/FriendList/FriendList\";\n\nconst OurFriendsPage = () => {\n  return <FriendList/>;\n};\n\nexport default OurFriendsPage;\n"],"names":["Spinner","styled","space","theme","fonts","fontSizes","fontWeights","colors","Card","mainWhite","CardTitle","mainAccent","CardInfo","CardPhoto","CardData","CardDataItem","CardWorkDays","CardTime","Friend","_id","title","url","imageUrl","addressUrl","address","email","phone","workDays","useState","isTimeHovered","setIsTimeHovered","daysOfWeek","today","Date","getDay","hours","isOpen","from","to","handleTimeHover","handleTimeLeave","href","target","rel","src","notfound","alt","onMouseEnter","onMouseLeave","Object","keys","length","entries","map","dayIndex","day","selectFriends","state","friends","PartnerTitle","additionalBlack","CardList","FriendsContainer","SpinnerContainer","FriendList","dispatch","useDispatch","useSelector","isLoading","setIsLoading","useEffect","fetchFriends","then","sadDog"],"sourceRoot":""}